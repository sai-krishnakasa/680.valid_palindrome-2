PROBLEM STATEMENT:
Given a string s, return true if the s can be palindrome after deleting at most one character from it.
Example 1:

Input: s = "aba"
Output: true
Example 2:

Input: s = "abca"
Output: true
Explanation: You could delete the character 'c'.
Example 3:

Input: s = "abc"
Output: false
 

Constraints:

1 <= s.length <= 105
s consists of lowercase English letters.
SOLUTION :

class Solution:
    def validPalindrome(self, s: str) -> bool:
        def isvalid(a_pointer,b_pointer):
            while(a_pointer<=b_pointer):
                if s[a_pointer]==s[b_pointer]:
                    a_pointer+=1
                    b_pointer-=1
                else:
                    return False
            return True
        i=0
        j=len(s)-1
        while(i<=j):
            if s[i]==s[j]:
                i+=1
                j-=1
            else:
                return isvalid(i+1,j) or isvalid(i,j-1)        
        return True
